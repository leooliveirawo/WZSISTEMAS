// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WZSISTEMAS.Dados.EF;

#nullable disable

namespace WZSISTEMAS.Dados.EF.Migrations
{
    [DbContext(typeof(WZSISTEMASEFDbContext))]
    [Migration("20240213195018_rv5")]
    partial class rv5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Caixa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AbertoEm")
                        .HasMaxLength(125)
                        .HasColumnType("DATETIME2")
                        .HasColumnName("ABERTO_EM");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasMaxLength(125)
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<decimal>("EntradaCanceladaCartaoConvenio")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_CARTAO_CONVENIO");

                    b.Property<decimal>("EntradaCanceladaCartaoCredito")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_CARTAO_CREDITO");

                    b.Property<decimal>("EntradaCanceladaCartaoDebito")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_CARTAO_DEBITO");

                    b.Property<decimal>("EntradaCanceladaCartaoVoucher")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_CARTAO_VOUCHER");

                    b.Property<decimal>("EntradaCanceladaCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_CHEQUE");

                    b.Property<decimal>("EntradaCanceladaDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_DINHEIRO");

                    b.Property<decimal>("EntradaCanceladaOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CANCELADA_OUTROS");

                    b.Property<decimal>("EntradaCartaoConvenio")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CARTAO_CONVENIO");

                    b.Property<decimal>("EntradaCartaoCredito")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CARTAO_CREDITO");

                    b.Property<decimal>("EntradaCartaoDebito")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CARTAO_DEBITO");

                    b.Property<decimal>("EntradaCartaoVoucher")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CARTAO_VOUCHER");

                    b.Property<decimal>("EntradaCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_CHEQUE");

                    b.Property<decimal>("EntradaDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_DINHEIRO");

                    b.Property<decimal>("EntradaOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("ENTRADA_OUTROS");

                    b.Property<DateTime?>("FechadoEm")
                        .HasMaxLength(125)
                        .HasColumnType("DATETIME2")
                        .HasColumnName("FECHADO_EM");

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MOTIVO_CANCELAMENTO");

                    b.Property<decimal>("SaidaCanceladaCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_CANCELADA_CHEQUE");

                    b.Property<decimal>("SaidaCanceladaDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_CANCELADA_DINHEIRO");

                    b.Property<decimal>("SaidaCanceladaOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_CANCELADA_OUTROS");

                    b.Property<decimal>("SaidaCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_CHEQUE");

                    b.Property<decimal>("SaidaDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_DINHEIRO");

                    b.Property<decimal>("SaidaOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SAIDA_OUTROS");

                    b.Property<decimal>("SaldoCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_CHEQUE");

                    b.Property<decimal>("SaldoDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_DINHEIRO");

                    b.Property<decimal>("SaldoFinal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_FINAL");

                    b.Property<decimal>("SaldoInicial")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_INICIAL");

                    b.Property<decimal>("SaldoOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_OUTROS");

                    b.Property<decimal>("SaldoSuprimento")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SALDO_SUPRIMENTO");

                    b.Property<int>("Status")
                        .HasMaxLength(125)
                        .HasColumnType("INT")
                        .HasColumnName("STATUS");

                    b.Property<decimal>("SuprimentoCanceladoCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_CANCELADO_CHEQUE");

                    b.Property<decimal>("SuprimentoCanceladoDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_CANCELADO_DINHEIRO");

                    b.Property<decimal>("SuprimentoCanceladoOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_CANCELADO_OUTROS");

                    b.Property<decimal>("SuprimentoCheque")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_CHEQUE");

                    b.Property<decimal>("SuprimentoDinheiro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_DINHEIRO");

                    b.Property<decimal>("SuprimentoOutros")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("SUPRIMENTO_OUTROS");

                    b.Property<long>("TerminalId")
                        .HasMaxLength(125)
                        .HasColumnType("BIGINT")
                        .HasColumnName("TERMINAL_ID");

                    b.Property<long>("UsuarioId")
                        .HasMaxLength(125)
                        .HasColumnType("BIGINT")
                        .HasColumnName("USUARIO_ID");

                    b.HasKey("Id");

                    b.HasIndex("TerminalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CAIXAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaEntrada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CaixaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CAIXA_ID");

                    b.Property<DateTime?>("CanceladaEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADA_EM");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<bool>("FoiCancelada")
                        .HasColumnType("BIT")
                        .HasColumnName("FOI_CANCELADA");

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MOTIVO_CANCELAMENTO");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("CAIXAS_ENTRADAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaSaida", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CaixaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CAIXA_ID");

                    b.Property<DateTime?>("CanceladaEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADA_EM");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<bool>("FoiCancelada")
                        .HasColumnType("BIT")
                        .HasColumnName("FOI_CANCELADA");

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MOTIVO_CANCELAMENTO");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("CAIXAS_SAIDAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaSuprimento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CaixaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CAIXA_ID");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<DateTime>("DataSuprimento")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_SUPRIMENTO");

                    b.Property<bool>("FoiCancelado")
                        .HasColumnType("BIT")
                        .HasColumnName("FOI_CANCELADO");

                    b.Property<string>("MotivoCancelamento")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("MOTIVO_CANCELAMENTO");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("CAIXAS_SUPRIMENTOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Cargo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Descricao")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("CARGOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CEP");

                    b.Property<string>("CPF_CNPJ")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CPF_CNPJ");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<bool>("ConvenioAtivo")
                        .HasColumnType("BIT")
                        .HasColumnName("CONVENIO_ATIVO");

                    b.Property<bool>("ConvenioBloqueado")
                        .HasColumnType("BIT")
                        .HasColumnName("CONVENIO_BLOQUEADO");

                    b.Property<bool>("ConvenioInativo")
                        .HasColumnType("BIT")
                        .HasColumnName("CONVENIO_INATIVO");

                    b.Property<decimal?>("ConvenioLimite")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CONVENIO_LIMITE");

                    b.Property<decimal?>("ConvenioLimiteDisponivel")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CONVENIO_LIMITE_DISPONIVEL");

                    b.Property<decimal?>("ConvenioLimiteUsado")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CONVENIO_LIMITE_USADO)");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EMAIL");

                    b.Property<int>("FaturaDiaFechamentoVencimento")
                        .HasColumnType("INT")
                        .HasColumnName("CONVENIO__FECHAMENTO_VENCIMENTO");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("LogradouroNumero")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO_NUMERO");

                    b.Property<string>("NomeCompleto_RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME_COMPLETO_RAZAO_SOCIAL");

                    b.Property<string>("Pais")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PAIS");

                    b.Property<string>("RG_INSCRICAO_ESTADUAL")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RG_INSCRICAO_ESTADUAL");

                    b.Property<string>("Referencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_3");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("UF")
                        .HasColumnType("INT")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.ToTable("CLIENTES", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.ClienteFatura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AnoReferente")
                        .HasColumnType("INT")
                        .HasColumnName("ANO_REFERENTE");

                    b.Property<long>("ClienteId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<int>("DiaFechamentoVencimento")
                        .HasColumnType("INT")
                        .HasColumnName("DIA_FECHAMENTO_VENCIMENTO");

                    b.Property<int>("MesReferente")
                        .HasColumnType("INT")
                        .HasColumnName("MES_REFERENTE");

                    b.Property<bool>("Pago")
                        .HasColumnType("BIT")
                        .HasColumnName("PAGO");

                    b.Property<bool>("ParcialmentePago")
                        .HasColumnType("BIT")
                        .HasColumnName("PARCIALMENTE_PAGO");

                    b.Property<decimal>("ValorFatura")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_FATURA");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_PAGO");

                    b.Property<decimal>("ValorRestante")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_RESTANTE");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("CLIENTES_FATURAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.ClienteLancamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("FaturaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("FATURA_ID");

                    b.Property<DateTime>("LancadoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CRIADO_EM");

                    b.Property<bool>("Pago")
                        .HasColumnType("BIT")
                        .HasColumnName("PAGO");

                    b.Property<bool>("ParcialmentePago")
                        .HasColumnType("BIT")
                        .HasColumnName("PARCIALMENTE_PAGO");

                    b.Property<decimal>("ValorLancamento")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_LANCAMENTO");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_PAGO");

                    b.Property<decimal>("ValorRestante")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_RESTANTE");

                    b.Property<long>("VendaPagamentoId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("VENDA_PAGAMENTO_ID");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.HasIndex("VendaPagamentoId");

                    b.ToTable("CLIENTES_LANCAMENTOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Empresa", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CEP");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CIDADE");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_REFERENCIA");

                    b.Property<string>("Complemento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EMAIL");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("INSCRICAO_ESTADUAL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("LogradouroNumero")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO_NUMERO");

                    b.Property<string>("Pais")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PAIS");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RAZAO_SOCIAL");

                    b.Property<string>("Referencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_3");

                    b.Property<int>("UF")
                        .HasColumnType("INT")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.ToTable("EMPRESAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Entrada", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_EMISSAO");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<long>("DestinarioId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("DESTINATARIO_ID");

                    b.Property<long>("EmitenteId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("EMITENTE_ID");

                    b.Property<long>("TerminalId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TERMINAL_ID");

                    b.Property<long>("TransportadoraId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TRANSPORTADORA_ID");

                    b.HasKey("Id");

                    b.HasIndex("DestinarioId");

                    b.HasIndex("EmitenteId");

                    b.HasIndex("TerminalId");

                    b.HasIndex("TransportadoraId");

                    b.ToTable("ENTRADAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.EntradaItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodigoProduto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_PRODUTO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO");

                    b.Property<long>("EntradaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ENTRADA_ID");

                    b.Property<long>("ItemId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("PRODUTO_ID");

                    b.Property<decimal>("Quantidade")
                        .HasPrecision(18, 3)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("QUANTIDADE");

                    b.Property<int>("UnidadeMedidaConversao")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA_CONVERSAO");

                    b.Property<int>("UnidadeMedidaDestino")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA_DESTINO");

                    b.Property<int>("UnidadeMedidaOrigem")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA_ORIGEM");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_UNITARIO");

                    b.HasKey("Id");

                    b.HasIndex("EntradaId");

                    b.HasIndex("ItemId");

                    b.ToTable("ENTRADAS_ITENS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Fornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CEP");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EMAIL");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("INSCRICAO_ESTADUAL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("LogradouroNumero")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO_NUMERO");

                    b.Property<string>("Pais")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PAIS");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RAZAO_SOCIAL");

                    b.Property<string>("Referencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_3");

                    b.Property<int>("UF")
                        .HasColumnType("INT")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.ToTable("FORNECEDORES", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Funcionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CEP");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CPF");

                    b.Property<long>("CargoId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CARGO_ID");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Complemento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("LogradouroNumero")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO_NUMERO");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME_COMPLETO");

                    b.Property<string>("Pais")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PAIS");

                    b.Property<string>("RG")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RG");

                    b.Property<string>("Referencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_3");

                    b.Property<int>("UF")
                        .HasColumnType("INT")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.ToTable("FUNCIONARIOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CFOP");

                    b.Property<string>("COFINS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COFINS");

                    b.Property<string>("CodigoAuxiliarBalanca")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_AUXILIAR_BALANCA");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_BARRAS");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_REFERENCIA");

                    b.Property<decimal?>("CustoReal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CUSTO_REAL");

                    b.Property<decimal?>("CustoReal2")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CUSTO_REAL_2");

                    b.Property<decimal?>("CustoReal3")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("CUSTO_REAL_3");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("DescricaoPDV")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO_PDV");

                    b.Property<int>("EstoqueAtual")
                        .HasColumnType("INT")
                        .HasColumnName("ESTOQUE_ATUAL");

                    b.Property<int>("EstoqueMinimo")
                        .HasColumnType("INT")
                        .HasColumnName("ESTOQUE_MINIMO");

                    b.Property<bool>("GerarDadosAuxiliarBalanca")
                        .HasColumnType("BIT")
                        .HasColumnName("GERAR_DADOS_AUXILIAR_BALANCA");

                    b.Property<bool>("GerenciarEstoque")
                        .HasColumnType("BIT")
                        .HasColumnName("GERENCIAR_ESTOQUE");

                    b.Property<string>("ICMS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ICMS");

                    b.Property<long?>("ItemPrincipalId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ITEM_PRINCIPAL_ID");

                    b.Property<decimal?>("MargemLucro")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("MARGEM_LUCRO");

                    b.Property<decimal?>("MargemLucro2")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("MARGEM_LUCRO_2");

                    b.Property<decimal?>("MargemLucro3")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("MARGEM_LUCRO_3");

                    b.Property<int>("ModoItem")
                        .HasColumnType("INT")
                        .HasColumnName("MODO_ITEM");

                    b.Property<bool>("MultiplosPrecos")
                        .HasColumnType("BIT")
                        .HasColumnName("MULTIPLOS_PRECOS");

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NCM");

                    b.Property<bool>("NotificarEstoqueBaixo")
                        .HasColumnType("BIT")
                        .HasColumnName("NOTIFICAR_ESTOQUE_BAIXO");

                    b.Property<string>("PIS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PIS");

                    b.Property<decimal>("PrecoFinal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("PRECO_FINAL");

                    b.Property<decimal?>("PrecoFinal2")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("PRECO_FINAL_2");

                    b.Property<decimal?>("PrecoFinal3")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("PRECO_FINAL_3");

                    b.Property<long>("TipoCOFINS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_COFINS");

                    b.Property<long>("TipoICMS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_ICMS");

                    b.Property<int>("TipoItem")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO_ITEM");

                    b.Property<long>("TipoPIS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_PIS");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA");

                    b.Property<bool>("UsarBalancaCheckout")
                        .HasColumnType("BIT")
                        .HasColumnName("USAR_BALANCA_CHECKOUT");

                    b.HasKey("Id");

                    b.HasIndex("ItemPrincipalId");

                    b.ToTable("ITENS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AbertoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("ABERTO_EM");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<DateTime?>("FinalizadoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("FINALIZADO_EM");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("BIGINT");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal?>("ValorTotalDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL_DESCONTO");

                    b.Property<decimal>("Volume")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VOLUME");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("PEDIDOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.PedidoItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CFOP");

                    b.Property<string>("COFINS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COFINS");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_BARRAS");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_REFERENCIA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("ICMS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ICMS");

                    b.Property<long>("ItemId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ITEM_ID");

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NCM");

                    b.Property<string>("PIS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PIS");

                    b.Property<long>("PedidoId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("PEDIDO_ID");

                    b.Property<decimal>("Quantidade")
                        .HasPrecision(18, 3)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("QUANTIDADE");

                    b.Property<long>("TipoCOFINS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_COFINS");

                    b.Property<long>("TipoICMS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_ICMS");

                    b.Property<int>("TipoItem")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO_ITEM");

                    b.Property<long>("TipoPIS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_PIS");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal?>("ValorTotalDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL_DESCONTO");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_UNITARIO");

                    b.Property<decimal?>("ValorUnitarioDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_UNITARIO_DESCONTO");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PedidoId");

                    b.ToTable("PEDIDOS_ITENS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Terminal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EmpresaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("EMPRESA_ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("TERMINAIS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Transportadora", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CEP");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CNPJ");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CIDADE");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_REFERENCIA");

                    b.Property<string>("Complemento")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("EMAIL");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("INSCRICAO_ESTADUAL");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("LogradouroNumero")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("LOGRADOURO_NUMERO");

                    b.Property<string>("Pais")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PAIS");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("RAZAO_SOCIAL");

                    b.Property<string>("Referencia")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_2");

                    b.Property<string>("Telefone3")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("TELEFONE_3");

                    b.Property<int>("UF")
                        .HasColumnType("INT")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.ToTable("TRANSPORTADORAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("BIT")
                        .HasColumnName("ATIVO");

                    b.Property<long>("FuncionarioId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("FUNCIONARIO_ID");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("HASH_SENHA");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NOME_USUARIO");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("USUARIOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Venda", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("AbertaEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("ABERTA_EM");

                    b.Property<string>("CFeXml")
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CFE_XML");

                    b.Property<string>("CPF_CNPJ_Nota")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CPF_CNPJ_NOTA");

                    b.Property<long>("CaixaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CAIXA_ID");

                    b.Property<DateTime?>("CanceladaEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADA_EM");

                    b.Property<bool>("EmEspera")
                        .HasColumnType("BIT")
                        .HasColumnName("EM_ESPERA");

                    b.Property<DateTime?>("FechadaEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("FECHADA_EM");

                    b.Property<decimal>("Troco")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("TROCO");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal?>("ValorTotalDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL_DESCONTO");

                    b.Property<long>("Volume")
                        .HasColumnType("BIGINT")
                        .HasColumnName("VOLUME");

                    b.HasKey("Id");

                    b.HasIndex("CaixaId");

                    b.ToTable("VENDAS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.VendaItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CFOP")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CFOP");

                    b.Property<string>("COFINS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("COFINS");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<string>("CodigoBarras")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_BARRAS");

                    b.Property<string>("CodigoReferencia")
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CODIGO_REFERENCIA");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("ICMS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("ICMS");

                    b.Property<long>("ItemId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("ITEM_ID");

                    b.Property<string>("NCM")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("NCM");

                    b.Property<string>("PIS")
                        .IsRequired()
                        .HasMaxLength(-1)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("PIS");

                    b.Property<decimal>("Quantidade")
                        .HasPrecision(18, 3)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("QUANTIDADE");

                    b.Property<long>("TipoCOFINS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_COFINS");

                    b.Property<long>("TipoICMS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_ICMS");

                    b.Property<int>("TipoItem")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO_ITEM");

                    b.Property<long>("TipoPIS")
                        .HasColumnType("BIGINT")
                        .HasColumnName("TIPO_PIS");

                    b.Property<int>("UnidadeMedida")
                        .HasColumnType("INT")
                        .HasColumnName("UNIDADE_MEDIDA");

                    b.Property<decimal>("ValorTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL");

                    b.Property<decimal?>("ValorTotalDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_TOTAL_DESCONTO");

                    b.Property<decimal>("ValorUnitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_UNITARIO");

                    b.Property<decimal?>("ValorUnitarioDesconto")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_UNITARIO_DESCONTO");

                    b.Property<long>("VendaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("VENDA_ID");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("VendaId");

                    b.ToTable("VENDAS_ITENS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.VendaPagamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CaixaEntradaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("CAIXA_ENTRADA_ID");

                    b.Property<DateTime?>("CanceladoEm")
                        .HasColumnType("DATETIME2")
                        .HasColumnName("CANCELADO_EM");

                    b.Property<int>("Tipo")
                        .HasColumnType("INT")
                        .HasColumnName("TIPO");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_PAGO");

                    b.Property<decimal>("ValorPagoLiquido")
                        .HasPrecision(18, 2)
                        .HasColumnType("DECIMAL")
                        .HasColumnName("VALOR_PAGO_LIQUIDO");

                    b.Property<long>("VendaId")
                        .HasColumnType("BIGINT")
                        .HasColumnName("VENDA_ID");

                    b.HasKey("Id");

                    b.HasIndex("CaixaEntradaId")
                        .IsUnique();

                    b.HasIndex("VendaId");

                    b.ToTable("VENDAS_PAGAMENTOS", (string)null);
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Caixa", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Terminal", "Terminal")
                        .WithMany("Caixas")
                        .HasForeignKey("TerminalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Terminal");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaEntrada", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Caixa", "Caixa")
                        .WithMany("Entradas")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaSaida", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Caixa", "Caixa")
                        .WithMany("Saidas")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaSuprimento", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Caixa", "Caixa")
                        .WithMany("Suprimentos")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.ClienteFatura", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Cliente", "Cliente")
                        .WithMany("Faturas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.ClienteLancamento", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.ClienteFatura", "Fatura")
                        .WithMany("Lancamentos")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.VendaPagamento", "VendaPagamento")
                        .WithMany("ClientesTitulos")
                        .HasForeignKey("VendaPagamentoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Fatura");

                    b.Navigation("VendaPagamento");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Entrada", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Empresa", "Destinario")
                        .WithMany("Entradas")
                        .HasForeignKey("DestinarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Fornecedor", "Emitente")
                        .WithMany("Entradas")
                        .HasForeignKey("EmitenteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Terminal", "Terminal")
                        .WithMany("Entradas")
                        .HasForeignKey("TerminalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Transportadora", "Transportadora")
                        .WithMany("Entradas")
                        .HasForeignKey("TransportadoraId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Destinario");

                    b.Navigation("Emitente");

                    b.Navigation("Terminal");

                    b.Navigation("Transportadora");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.EntradaItem", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Entrada", "Entrada")
                        .WithMany("Itens")
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Item", "Item")
                        .WithMany("EntradasItens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Entrada");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Funcionario", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Cargo", "Cargo")
                        .WithMany("Funcionarios")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Cargo");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Item", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Item", "ItemPrincipal")
                        .WithMany("ItensDerivados")
                        .HasForeignKey("ItemPrincipalId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ItemPrincipal");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Pedido", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Funcionario", "Funcionario")
                        .WithMany("Pedidos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.PedidoItem", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Item", "Item")
                        .WithMany("PedidosItens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Terminal", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Empresa", "Empresa")
                        .WithMany("Terminais")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Usuario", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Funcionario", "Funcionario")
                        .WithOne("Usuario")
                        .HasForeignKey("WZSISTEMAS.Dados.Entidades.Usuario", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Venda", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Caixa", "Caixa")
                        .WithMany("Vendas")
                        .HasForeignKey("CaixaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Caixa");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.VendaItem", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.Item", "Item")
                        .WithMany("VendasItens")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Venda", "Venda")
                        .WithMany("Itens")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.VendaPagamento", b =>
                {
                    b.HasOne("WZSISTEMAS.Dados.Entidades.CaixaEntrada", "CaixaEntrada")
                        .WithOne("VendaPagamento")
                        .HasForeignKey("WZSISTEMAS.Dados.Entidades.VendaPagamento", "CaixaEntradaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WZSISTEMAS.Dados.Entidades.Venda", "Venda")
                        .WithMany("Pagamentos")
                        .HasForeignKey("VendaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaixaEntrada");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Caixa", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");

                    b.Navigation("Suprimentos");

                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.CaixaEntrada", b =>
                {
                    b.Navigation("VendaPagamento");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Cargo", b =>
                {
                    b.Navigation("Funcionarios");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Cliente", b =>
                {
                    b.Navigation("Faturas");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.ClienteFatura", b =>
                {
                    b.Navigation("Lancamentos");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Empresa", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Terminais");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Entrada", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Fornecedor", b =>
                {
                    b.Navigation("Entradas");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Funcionario", b =>
                {
                    b.Navigation("Pedidos");

                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Item", b =>
                {
                    b.Navigation("EntradasItens");

                    b.Navigation("ItensDerivados");

                    b.Navigation("PedidosItens");

                    b.Navigation("VendasItens");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Pedido", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Terminal", b =>
                {
                    b.Navigation("Caixas");

                    b.Navigation("Entradas");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Transportadora", b =>
                {
                    b.Navigation("Entradas");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.Venda", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("WZSISTEMAS.Dados.Entidades.VendaPagamento", b =>
                {
                    b.Navigation("ClientesTitulos");
                });
#pragma warning restore 612, 618
        }
    }
}
